{"version":3,"sources":["reportWebVitals.js","Cards.js","Map.js","Search.js","Select.js","BorderCountries.js","Country.js","App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","useStyles","makeStyles","root","width","margin","height","media","dark","backgroundColor","color","MediaCard","i","dmode","input1","classes","to","name","Card","className","CardActionArea","CardMedia","image","flag","CardContent","Typography","gutterBottom","variant","component","population","region","capital","Map","useState","datas","setDatas","searched","setSearched","getData","a","fetch","res","json","data","console","log","useEffect","result","filter","it","toUpperCase","includes","getSearch","filt","getFilter","length","map","numericCode","Search","change","input","setInput","document","querySelector","style","setProperty","type","placeholder","value","onChange","event","target","Select","regions","e","BorderCountries","j","cname","setCname","url","getName","Country","country","setCountry","useParams","fetchData","src","nativeName","subregion","topLevelDomain","currencies","languages","borders","App","setInput1","setRegion","setDmode","onClick","body","classList","toggle","class","exact","path","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.8e6ac778.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {Link} from 'react-router-dom'\r\nimport Map from './Map'\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: 256,\r\n    margin:30,\r\n    height:310, \r\n  },\r\n  \r\n  media: {\r\n    height: 140,\r\n  },\r\n  dark:{\r\n    backgroundColor:\"hsl(209, 23%, 22%)\",\r\n    color:\"white\",\r\n  }\r\n});\r\n\r\n\r\nexport default function MediaCard({i,input1,dmode}) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n      <Link to={`/${i.name}`}>\r\n    <Card className={`${classes.root} ${dmode && classes.dark} `}>\r\n      <CardActionArea>\r\n        <CardMedia\r\n          className={classes.media}\r\n          image={i.flag}\r\n        />\r\n        <CardContent>\r\n          <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n            {i.name}\r\n          </Typography>\r\n          <Typography  variant=\"body2\"  component=\"p\">\r\n            Population: {i.population}\r\n          </Typography>\r\n          <Typography variant=\"body2\"  component=\"p\">\r\n            Region: {i.region}\r\n          </Typography>\r\n          <Typography variant=\"body2\"  component=\"p\">\r\n             Capital : {i.capital}\r\n          </Typography>\r\n          {/* <Link to={`/${i.name}`}> */}\r\n        </CardContent>\r\n      </CardActionArea>\r\n    </Card>\r\n          </Link>\r\n  );\r\n}\r\n","import React from 'react'\r\nimport Cards from './Cards'\r\nimport './Map.css'\r\nimport {useState, useEffect} from 'react';\r\n\r\n\r\nfunction Map({input1,region,dmode}) {\r\n\r\n    const [datas,setDatas]=useState([]);\r\n    const [searched,setSearched]=useState([]);\r\n\r\n    const getData = async()=>{\r\n        await fetch('https://restcountries.eu/rest/v2/all')\r\n         .then(res=>res.json())\r\n         .then(data=>{\r\n             console.log(data);\r\n             setDatas(data);\r\n\r\n         })\r\n     }\r\n\r\n     const getSearch = () => {\r\n        const result = datas.filter(it=>it.name.toUpperCase().includes(input1.toUpperCase()))\r\n                 setSearched(result)\r\n     }\r\n\r\n     const getFilter = () => {\r\n        const filt = datas.filter(it=>it.region===region)\r\n        setSearched(filt)\r\n    }\r\n\r\n    console.log(input1)\r\n  \r\n    useEffect(()=>{\r\n    getSearch();\r\n    },[input1]);\r\n\r\n     useEffect(()=>{\r\n        getFilter();\r\n      },[region]);\r\n\r\n    useEffect(()=>{\r\n        getData();\r\n    },[]);\r\n\r\n\r\n\r\n    return (\r\n        <div className='map'>\r\n\r\n            {datas?.length > 0 ?\r\n             searched.length > 0 ? \r\n             searched.map(i => (<Cards i={i} dmode={dmode} key={i.numericCode} input1={input1}\r\n                   />))\r\n            :\r\n             datas.map(i => (\r\n               <Cards i={i}  dmode={dmode} key={i.numericCode} input1={input1} />\r\n\r\n               ))\r\n            :\r\n            <div className=\"load\"><h1>Loading...</h1></div>\r\n\r\n               }            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Map\r\n","import React, { useState, useEffect } from 'react'\r\nimport './Map.css'\r\nimport SearchIcon from '@material-ui/icons/Search';\r\n\r\nfunction Search({change,dmode}) {\r\n     const [input, setInput] = useState('');\r\n     useEffect(() => {\r\n        function update() {\r\n    dmode\r\n      ? document\r\n          .querySelector(\"input[type=text]\")\r\n          .style.setProperty(\"--c\", \"white\")\r\n      : document\r\n          .querySelector(\"input[type=text]\")\r\n          .style.setProperty(\"--c\", \"black\")\r\n      }\r\n        update();\r\n    }, [dmode])\r\n\r\n    return (\r\n        <div className={`searchs  ${dmode && \"dark-elem\"}`}>\r\n            <button className={`btn-dark ${dmode && \"dark-elem\"}`} >\r\n                <SearchIcon />\r\n\r\n                <input className={`${dmode && \"dark-elem\"}`} type=\"text\"\r\n                placeholder='Search for a country....' value={input} onChange={(event) => {\r\n                    setInput(event.target.value);\r\n                    change(event.target.value);\r\n                }}\r\n                />\r\n            </button>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Search\r\n","import React,{useState, useEffect} from 'react'\r\nimport './Map.css'\r\n\r\n\r\nfunction Select({regions,dmode}) {\r\n    const [filter,setFilter] =  useState([]);\r\n    return (\r\n        <div >\r\n             <select className={`${dmode && \"dark-elem\"}`}  onChange={(e)=>{regions(e.target.value) ;\r\n              console.log(e.target.value)}}\r\n             >\r\n              <option  onChange={(e)=>{regions(e.target.value)}} value=\"filter\">Select-region</option>\r\n              <option  onChange={(e)=>{regions(e.target.value)}} value=\"Africa\">Africa</option>\r\n              <option onChange={(e)=>{regions(e.target.value)}}  value=\"Americas\">Americas</option>\r\n              <option onChange={(e)=>{regions(e.target.value)}} value=\"Asia\">Asia</option>\r\n              <option onChange={(e)=>{regions(e.target.value)}}  value=\"Europe\">Europe</option>\r\n              <option onChange={(e)=>{regions(e.target.value)}} value=\"Oceania\">Oceania</option>\r\n            </select>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Select\r\n","import React, {useState, useEffect} from 'react'\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport './BorderCountries.css'\r\n\r\nfunction BorderCountries({j, dmode}) {\r\n\r\n    const [cname, setCname] = useState('')\r\n\r\n    const url = `https://restcountries.eu/rest/v2/alpha/${j}`\r\n\r\n\r\n    const getName = async () => {\r\n        await fetch(url)\r\n        .then(res=>res.json())\r\n        .then(data => {\r\n          //  console.log(data.name)\r\n            setCname(data.name)\r\n            // test(data.name)\r\n            // getBorder(data.name)\r\n            console.log(data.name)\r\n        })\r\n    }\r\n    \r\n    useEffect(() => {\r\n        getName();\r\n    },[j])\r\n\r\n    return (\r\n        <div className={`labels ${dmode && \"neighbour-dark\"}`}>\r\n            <Link className={dmode && \"a-dark\"} to={`/${cname}`}>\r\n            <h5>{cname}</h5>\r\n            </Link>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BorderCountries","import React, { useState, useEffect } from 'react'\r\nimport './Map.css'\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport { Link, useParams } from 'react-router-dom'\r\nimport BorderCountries from './BorderCountries'\r\nimport './BorderCountries.css'\r\n\r\n\r\nfunction Country({ dmode }) {\r\n    const [country, setCountry] = useState([])\r\n    const { name } = useParams();\r\n\r\n    const url = `https://restcountries.eu/rest/v2/name/${name}?fullText=true`\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            await fetch(url)\r\n                .then(res => res.json())\r\n                .then(data => {\r\n                    setCountry(data)\r\n                    console.log(data)\r\n                })\r\n        }\r\n        fetchData()\r\n\r\n    }, [name])\r\n\r\n    return (\r\n\r\n\r\n        <div>\r\n            <Link to=\"/\">\r\n                <div className=\"Country\">\r\n                    <button className={`btn btn-light ${dmode && \"dark-elem\"}`}>\r\n                        <ArrowBackIcon /> <p>Back</p>\r\n                    </button>\r\n                </div>\r\n            </Link>\r\n\r\n            {   country?.length > 0 ?\r\n                country.map(i => (\r\n                    <div key={i.numericCode}>\r\n                        <div className=\"Country-details\">\r\n                            <div className='flag'>\r\n                                <img src={i.flag} className=\"img\" key={i.numericCode} />\r\n                            </div>\r\n\r\n                            <div className='text'>\r\n                                <h2 key={i.numericCode}>{i.name}</h2>\r\n                                <div key={i.numericCode} className='page'>\r\n\r\n                                    <h3 >Native Name :<span>{i.nativeName}</span></h3>\r\n                                    <h3 >Population :<span>{i.population}</span></h3>\r\n                                    <h3 >Region :<span> {i.region}</span></h3>\r\n\r\n                                    <h3>Sub Region :<span> {i.subregion}</span></h3>\r\n                                    <h3>Capital :<span> {i.capital}</span></h3>\r\n\r\n                                    {/* </div>\r\n                                <div> */}\r\n                                    <h3>Top Level Domain :<span>{i.topLevelDomain}</span></h3>\r\n                                    <h3 >Currencies :<span> {i.currencies[0].name}</span></h3>\r\n                                    <h3 >Languages :<span> {i.languages[0].name}</span></h3>\r\n                                </div>\r\n                                {/* </div> */}\r\n                                <div className=\"border\">\r\n                                    <div className=\"BorderCountries\">\r\n                                    <h3>Border Countries :</h3>\r\n                                        {i.borders.map((j) => {\r\n\r\n                                            return (\r\n                                                <Link to={`/${i.name}`}>\r\n\r\n                                                    <BorderCountries dmode={dmode} j={j} />\r\n\r\n                                                </Link>\r\n                                            )\r\n                                        })}\r\n                                    </div>\r\n                                </div>\r\n\r\n                            </div>\r\n\r\n                        \r\n                        </div>\r\n                    \r\n\r\n                    </div>\r\n                    \r\n                    \r\n                    \r\n                    ))\r\n                    :\r\n                    <div className=\"load\"><h1>Loading...</h1></div>\r\n                }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Country\r\n","import './App.css';\nimport Map from './Map.js'\nimport Search from './Search.js'\nimport Select from './Select.js'\nimport Country from './Country.js'\nimport { useState } from 'react';\nimport { Route, HashRouter as Router } from 'react-router-dom';\n\n\nfunction App() {\n  const [input1, setInput1] = useState('');\n  const [region, setRegion] = useState('');\n  const [dmode, setDmode] = useState(false);\n\n  const myfuction = () => {\n    var element = document.body;\n    element.classList.toggle(\"dark-mode\");\n    setDmode(!dmode);\n  }\n\n  const regions = (e) => {\n    setRegion(e)\n  }\n\n  const change = (a) => {\n    setInput1(a);\n    console.log(input1)\n  }\n  return (\n    <Router>\n\n      <div className={`App ${dmode && \"dark-mode\"}`}>\n        <div className={`header ${dmode && \"dark-elem\"}`}>\n          <h1> Where in the world?</h1>\n          <div className=\"moon\"  onClick={myfuction}>\n            <i className='moon' class=\"fa fa-moon-o\"></i>Dark Mode\n        </div>\n        </div>\n        <Route exact path=\"/\">\n\n          <div className='search'>\n\n            <Search change={change} dmode={dmode} />\n            <Select regions={regions}  dmode={dmode} />\n\n          </div>\n          <Map input1={input1} region={region} dmode={dmode} />\n        </Route>\n        <Route exact path=\"/:name\">\n          <Country dmode={dmode}/>\n          </Route> \n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport reportWebVitals from './reportWebVitals';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n     <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}