{"version":3,"sources":["reportWebVitals.js","Cards.js","Map.js","Search.js","Select.js","BorderCountries.js","Country.js","App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","useStyles","makeStyles","root","width","margin","height","media","dark","backgroundColor","color","MediaCard","i","dmode","input1","classes","to","name","Card","className","CardActionArea","CardMedia","image","flag","CardContent","Typography","gutterBottom","variant","component","population","region","capital","Map","useState","datas","setDatas","searched","setSearched","getData","a","fetch","res","json","data","console","log","useEffect","result","filter","it","toUpperCase","includes","getSearch","filt","getFilter","length","map","numericCode","Search","change","input","setInput","document","querySelector","style","setProperty","type","placeholder","value","onChange","event","target","Select","regions","e","BorderCountries","j","cname","setCname","url","getName","common","Country","country","setCountry","useParams","fetchData","src","flags","svg","subregion","tld","currencies","Object","keys","languages","key","borders","App","setInput1","setRegion","setDmode","onClick","body","classList","toggle","class","exact","path","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.8ccbef25.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {Link} from 'react-router-dom'\r\nimport Map from './Map'\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: 256,\r\n    margin:30,\r\n    height:310, \r\n  },\r\n  \r\n  media: {\r\n    height: 140,\r\n  },\r\n  dark:{\r\n    backgroundColor:\"hsl(209, 23%, 22%)\",\r\n    color:\"white\",\r\n  }\r\n});\r\n\r\n\r\nexport default function MediaCard({i,input1,dmode}) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n      <Link to={`/${i.name}`}>\r\n    <Card className={`${classes.root} ${dmode && classes.dark} `}>\r\n      <CardActionArea>\r\n        <CardMedia\r\n          className={classes.media}\r\n          image={i.flag}\r\n        />\r\n        <CardContent>\r\n          <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n            {i.name}\r\n          </Typography>\r\n          <Typography  variant=\"body2\"  component=\"p\">\r\n            Population: {i.population}\r\n          </Typography>\r\n          <Typography variant=\"body2\"  component=\"p\">\r\n            Region: {i.region}\r\n          </Typography>\r\n          <Typography variant=\"body2\"  component=\"p\">\r\n             Capital : {i.capital}\r\n          </Typography>\r\n          {/* <Link to={`/${i.name}`}> */}\r\n        </CardContent>\r\n      </CardActionArea>\r\n    </Card>\r\n          </Link>\r\n  );\r\n}\r\n","import React from 'react'\r\nimport Cards from './Cards'\r\nimport './Map.css'\r\nimport {useState, useEffect} from 'react';\r\n\r\n\r\nfunction Map({input1,region,dmode}) {\r\n\r\n    const [datas,setDatas]=useState([]);\r\n    const [searched,setSearched]=useState([]);\r\n\r\n    const getData = async () => {\r\n        \r\n         await fetch(\"https://restcountries.com/v2/all\")\r\n         .then(res=>res.json())\r\n         .then(data=>{\r\n             console.log(data);\r\n             setDatas(data);\r\n\r\n         })\r\n     }\r\n\r\n     const getSearch = () => {\r\n        const result = datas.filter(it=>it.name.toUpperCase().includes(input1.toUpperCase()))\r\n                 setSearched(result)\r\n     }\r\n\r\n     const getFilter = () => {\r\n        const filt = datas.filter(it=>it.region===region)\r\n        setSearched(filt)\r\n    }\r\n\r\n    console.log(input1)\r\n  \r\n    useEffect(()=>{\r\n    getSearch();\r\n    },[input1]);\r\n\r\n     useEffect(()=>{\r\n        getFilter();\r\n      },[region]);\r\n\r\n    useEffect(()=>{\r\n        getData();\r\n    },[]);\r\n\r\n\r\n\r\n    return (\r\n        <div className='map'>\r\n\r\n            {datas?.length > 0 ?\r\n             searched.length > 0 ? \r\n             searched.map(i => (<Cards i={i} dmode={dmode} key={i.numericCode} input1={input1}\r\n                   />))\r\n            :\r\n             datas.map(i => (\r\n               <Cards i={i}  dmode={dmode} key={i.numericCode} input1={input1} />\r\n\r\n               ))\r\n            :\r\n            <div className=\"load\"><h1>Loading...</h1></div>\r\n\r\n               }            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Map\r\n","import React, { useState, useEffect } from 'react'\r\nimport './Map.css'\r\nimport SearchIcon from '@material-ui/icons/Search';\r\n\r\nfunction Search({change,dmode}) {\r\n     const [input, setInput] = useState('');\r\n     useEffect(() => {\r\n        function update() {\r\n    dmode\r\n      ? document\r\n          .querySelector(\"input[type=text]\")\r\n          .style.setProperty(\"--c\", \"white\")\r\n      : document\r\n          .querySelector(\"input[type=text]\")\r\n          .style.setProperty(\"--c\", \"black\")\r\n      }\r\n        update();\r\n    }, [dmode])\r\n\r\n    return (\r\n        <div className={`searchs  ${dmode && \"dark-elem\"}`}>\r\n            <button className={`btn-dark ${dmode && \"dark-elem\"}`} >\r\n                <SearchIcon />\r\n\r\n                <input className={`${dmode && \"dark-elem\"}`} type=\"text\"\r\n                placeholder='Search for a country....' value={input} onChange={(event) => {\r\n                    setInput(event.target.value);\r\n                    change(event.target.value);\r\n                }}\r\n                />\r\n            </button>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Search\r\n","import React,{useState, useEffect} from 'react'\r\nimport './Map.css'\r\n\r\n\r\nfunction Select({regions,dmode}) {\r\n    const [filter,setFilter] =  useState([]);\r\n    return (\r\n        <div >\r\n             <select className={`${dmode && \"dark-elem\"}`}  onChange={(e)=>{regions(e.target.value) ;\r\n              console.log(e.target.value)}}\r\n             >\r\n              <option  onChange={(e)=>{regions(e.target.value)}} value=\"filter\">Select-region</option>\r\n              <option  onChange={(e)=>{regions(e.target.value)}} value=\"Africa\">Africa</option>\r\n              <option onChange={(e)=>{regions(e.target.value)}}  value=\"Americas\">Americas</option>\r\n              <option onChange={(e)=>{regions(e.target.value)}} value=\"Asia\">Asia</option>\r\n              <option onChange={(e)=>{regions(e.target.value)}}  value=\"Europe\">Europe</option>\r\n              <option onChange={(e)=>{regions(e.target.value)}} value=\"Oceania\">Oceania</option>\r\n            </select>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Select\r\n","import React, {useState, useEffect} from 'react'\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport './BorderCountries.css'\r\n\r\nfunction BorderCountries({j, dmode}) {\r\n\r\n    const [cname, setCname] = useState('')\r\n\r\n      const url = `https://restcountries.com/v3.1/alpha/${j}`\r\n\r\n\r\n    const getName = async () => {\r\n        await fetch(url)\r\n        .then(res=>res.json())\r\n        .then(data => {\r\n          //  console.log(data.name)\r\n            setCname(data[0].name.common)\r\n            \r\n        })\r\n    }\r\n    \r\n    useEffect(() => {\r\n        getName();\r\n    },[j])\r\n\r\n    return (\r\n        <div className={`labels ${dmode && \"neighbour-dark\"}`}>\r\n            <Link className={dmode && \"a-dark\"} to={`/${cname}`}>\r\n            <h5>{cname}</h5>\r\n            </Link>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BorderCountries","import React, { useState, useEffect } from 'react'\r\nimport './Map.css'\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport { Link, useParams } from 'react-router-dom'\r\nimport BorderCountries from './BorderCountries'\r\nimport './BorderCountries.css'\r\n\r\n\r\nfunction Country({ dmode }) {\r\n    const [country, setCountry] = useState([])\r\n    const { name } = useParams();\r\n\r\n    // const url = `https://restcountries.eu/rest/v2/name/${name}?fullText=true`\r\n     const url = `https://restcountries.com/v3.1/name/${name}?fullText=true`\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            await fetch(url)\r\n                .then(res => res.json())\r\n                .then(data => {\r\n                    setCountry(data)\r\n                    console.log(data)\r\n                })\r\n        }\r\n        fetchData()\r\n\r\n    }, [name])\r\n\r\n    return (\r\n\r\n\r\n        <div>\r\n            <Link to=\"/\">\r\n                <div className=\"Country\">\r\n                    <button className={`btn btn-light ${dmode && \"dark-elem\"}`}>\r\n                        <ArrowBackIcon /> <p>Back</p>\r\n                    </button>\r\n                </div>\r\n            </Link>\r\n\r\n            {   country?.length > 0 ?\r\n                country.map(i => (\r\n                    <div key={i.numericCode}>\r\n                        <div className=\"Country-details\">\r\n                            <div className='flag'>\r\n                                <img src={i.flags.svg} className=\"img\" key={i.numericCode} />\r\n                            </div>\r\n\r\n                            <div className='text'>\r\n                                <h2 key={i.numericCode}>{i.name.common}</h2>\r\n                                <div key={i.numericCode} className='page'>\r\n\r\n                                    {/* <h3 >Native Name :<span>{i.nativeName}</span></h3> */}\r\n                                    <h3 >Population :<span>{i.population}</span></h3>\r\n                                    <h3 >Region :<span> {i.region}</span></h3>\r\n\r\n                                    <h3>Sub Region :<span> {i.subregion}</span></h3>\r\n                                    <h3>Capital :<span> {i.capital}</span></h3>\r\n\r\n                                    {/* </div>\r\n                                <div> */}\r\n                                    <h3>Top Level Domain :<span>{i.tld[0]}</span></h3>\r\n                                    <h3 >Currencies :<span> {i.currencies[Object.keys(i.currencies)[0]].name}</span></h3>\r\n                                    <h3 >Languages :<span>\r\n                                        <p className=\"coma\">\r\n                                                \r\n                                            {Object.keys(i.languages).map((key) => \r\n                                                <span>{i.languages[key]}</span>\r\n                                            )}\r\n                                        </p>\r\n                                    </span></h3>\r\n                                </div>\r\n                                {/* </div> */}\r\n                                <div className=\"border\">\r\n                                    <div className=\"BorderCountries\">\r\n                                     <h3>Border Countries :</h3>\r\n                                        \r\n                                        {\r\n                                            i.borders ? i.borders.map((j) => (\r\n                                                <BorderCountries j={j} dmode={dmode} />\r\n                                            ))\r\n                                            :\r\n                                            (<h5> None</h5>)                \r\n                                               \r\n                                        }\r\n                                    </div>\r\n                                </div>\r\n\r\n                            </div>\r\n\r\n                        \r\n                        </div>\r\n                    \r\n\r\n                    </div>\r\n                    \r\n                    \r\n                    \r\n                    ))\r\n                    :\r\n                    <div className=\"load\"><h1>Loading...</h1></div>\r\n                }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Country\r\n","import './App.css';\r\nimport Map from './Map.js'\r\nimport Search from './Search.js'\r\nimport Select from './Select.js'\r\nimport Country from './Country.js'\r\nimport { useState } from 'react';\r\nimport { Route, HashRouter as Router } from 'react-router-dom';\r\n\r\n\r\nfunction App() {\r\n  const [input1, setInput1] = useState('');\r\n  const [region, setRegion] = useState('');\r\n  const [dmode, setDmode] = useState(false);\r\n\r\n  const myfuction = () => {\r\n    var element = document.body;\r\n    element.classList.toggle(\"dark-mode\");\r\n    setDmode(!dmode);\r\n  }\r\n\r\n  const regions = (e) => {\r\n    setRegion(e)\r\n  }\r\n\r\n  const change = (a) => {\r\n    setInput1(a);\r\n    console.log(input1)\r\n  }\r\n  return (\r\n    <Router>\r\n\r\n      <div className={`App ${dmode && \"dark-mode\"}`}>\r\n        <div className={`header ${dmode && \"dark-elem\"}`}>\r\n          <h1> Where in the world?</h1>\r\n          <div className=\"moon\"  onClick={myfuction}>\r\n            <i className='moon' class=\"fa fa-moon-o\"></i>Dark Mode\r\n        </div>\r\n        </div>\r\n        <Route exact path=\"/\">\r\n\r\n          <div className='search'>\r\n\r\n            <Search change={change} dmode={dmode} />\r\n            <Select regions={regions}  dmode={dmode} />\r\n\r\n          </div>\r\n          <Map input1={input1} region={region} dmode={dmode} />\r\n        </Route>\r\n        <Route exact path=\"/:name\">\r\n          <Country dmode={dmode}/>\r\n          </Route> \r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n     <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}